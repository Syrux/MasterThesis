\select@language {english}
\contentsline {figure}{\numberline {1}{\ignorespaces PrefixSpan example\relax }}{10}{figure.caption.1}
\contentsline {figure}{\numberline {2}{\ignorespaces cSPADE database representation\relax }}{11}{figure.caption.2}
\contentsline {figure}{\numberline {3}{\ignorespaces cSPADE's ID-lists\relax }}{12}{figure.caption.3}
\contentsline {figure}{\numberline {4}{\ignorespaces An example of PPIC's execution}}{15}{figure.caption.4}
\contentsline {figure}{\numberline {5}{\ignorespaces Performance comparison of Hadoop and Spark\relax }}{17}{figure.caption.5}
\contentsline {figure}{\numberline {6}{\ignorespaces An example of Spark's execution}}{19}{figure.caption.6}
\contentsline {figure}{\numberline {7}{\ignorespaces Spark's mapReduce\relax }}{25}{figure.caption.7}
\contentsline {figure}{\numberline {8}{\ignorespaces The simple architecture used during the majority of our tests\relax }}{32}{figure.caption.10}
\contentsline {figure}{\numberline {9}{\ignorespaces Original performances of PPIC and Spark\relax }}{33}{figure.caption.11}
\contentsline {figure}{\numberline {10}{\ignorespaces A first implementation that makes PPIC scalable\relax }}{34}{figure.caption.12}
\contentsline {figure}{\numberline {11}{\ignorespaces The performance impact of not recalculating frequent items\relax }}{36}{figure.caption.13}
\contentsline {figure}{\numberline {12}{\ignorespaces The performance impact of Database Pre-processing Before PPIC's Execution\relax }}{37}{figure.caption.14}
\contentsline {figure}{\numberline {13}{\ignorespaces Automatic detection of item-sets type in dataset}}{38}{figure.caption.15}
\contentsline {figure}{\numberline {14}{\ignorespaces Efficiency gains of cleaning the sequence database before any local execution\relax }}{39}{figure.caption.16}
\contentsline {figure}{\numberline {15}{\ignorespaces Performance gain of first/last position lists\relax }}{40}{figure.caption.17}
\contentsline {figure}{\numberline {16}{\ignorespaces Performance improvement of specialising spark's scalable stage.\relax }}{41}{figure.caption.18}
\contentsline {figure}{\numberline {17}{\ignorespaces Naive priority scheduling}}{42}{figure.caption.19}
\contentsline {figure}{\numberline {18}{\ignorespaces Performance improvement of sorting sub-problems during map stage.\relax }}{43}{figure.caption.20}
\contentsline {figure}{\numberline {19}{\ignorespaces Map based - multi\_item algorithm}}{44}{figure.caption.21}
\contentsline {figure}{\numberline {20}{\ignorespaces PPIC with partial starts}}{46}{figure.caption.22}
\contentsline {figure}{\numberline {21}{\ignorespaces Performance of our final implementation\relax }}{47}{figure.caption.23}
\contentsline {figure}{\numberline {22}{\ignorespaces Scalability performances of the original implementation\relax }}{48}{figure.caption.24}
\contentsline {figure}{\numberline {23}{\ignorespaces Scalability performances of our final implementation\relax }}{49}{figure.caption.25}
\contentsline {figure}{\numberline {24}{\ignorespaces Example of an S-matrix for PrefixSpan bi-level projection\relax }}{54}{figure.caption.27}
\contentsline {figure}{\numberline {25}{\ignorespaces PPIC's performances VS other specialized algorithm\relax }}{55}{figure.caption.28}
\contentsline {figure}{\numberline {26}{\ignorespaces Performance improvement of fixing Spark's pre-processing\relax }}{56}{figure.caption.29}
\contentsline {figure}{\numberline {27}{\ignorespaces Performance improvement - soft limit on the number of created sub-problem.}}{57}{figure.caption.30}
\contentsline {figure}{\numberline {28}{\ignorespaces PPIC with a map structure}}{58}{figure.caption.31}
